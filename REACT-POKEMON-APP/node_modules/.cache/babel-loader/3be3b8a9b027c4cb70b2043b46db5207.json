{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Videos\\\\PROGRAMMATION\\\\Programmation web\\\\JavaScript et ses frameworks\\\\React Js\\\\REACT-POKEMON-APP\\\\src\\\\components\\\\pokemon-card.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './pokemon-card.css'; //importation du fichier css\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//on a typé notre propos\n\nconst PokemonCard = ({\n  pokemon,\n  borderColor = '#009688'\n}) => {\n  _s();\n  const [color, setColor] = useState();\n  //const history  = useHistory();//on recupere un objet qui prend l'historique du navigateur depuis le Hook que nous avons importé.\n\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n  const hideBorder = () => {\n    setColor('#f5f5f5'); // on remet la bordure en gris\n  };\n  //Grace au Hook useState on modifie la valeur de color avec les f(x)s showBorder et hideBorder en ajoutant les evenements ci-dessous : onMouseLeave et onMouseEnter(voir dans le cahier).\n\n  // const goTopokemon = (id:number) => {\n  //     history.push(`/pokemons/${id}`);\n  // }\n  //Permet de nous diriger vers la page pokemon-detail.tsx\n  //On peut utiliser LInk ou le Hook useHistory pour nous diriger vers d'autres routes\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/pokemons/+\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col s6 m4\",\n      onMouseEnter: showBorder,\n      onMouseLeave: hideBorder,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card horizontal\",\n        style: {\n          borderColor: color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokemon.picture,\n            alt: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-stacked\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: formatDate(pokemon.created)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: formatType(type),\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n 1. Ce composant(pokemon.card) est chargé d'afficher le pokemon.\r\n\r\n 2.Pour passer une props dans un composant: on le passe en parametre dans la f(x) qui represente notre composant voir la ligne avec la const PokemonCard:\r\n\r\n 3.Du coup la prop qu'on a passé est pokemon mais on ne sait si c'est un string, un nombre ou ... d'où la raison de typer notre prod (Voir le cours de type script sur la création des types)\r\n\r\n 4. On a typé notre f(x) avec le type Props (voir les generics en TypeScript);\r\n*/\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","formatDate","formatType","Link","jsxDEV","_jsxDEV","PokemonCard","pokemon","borderColor","_s","color","setColor","showBorder","hideBorder","to","children","className","onMouseEnter","onMouseLeave","style","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","created","types","map","type","_c","$RefreshReg$"],"sources":["C:/Users/USER/Videos/PROGRAMMATION/Programmation web/JavaScript et ses frameworks/React Js/REACT-POKEMON-APP/src/components/pokemon-card.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport './pokemon-card.css'; //importation du fichier css\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport { Link } from 'react-router-dom';\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  borderColor?: string//une props par défaut ou facultative grace au point d'interrogation. \r\n  \r\n}; //on a typé notre propos\r\n\r\n\r\n  \r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor='#009688'}) => {\r\n\r\n    const [color, setColor]= useState<string>();\r\n    //const history  = useHistory();//on recupere un objet qui prend l'historique du navigateur depuis le Hook que nous avons importé.\r\n\r\n    const showBorder = () =>{\r\n      setColor(borderColor);\r\n    }\r\n    \r\n    const hideBorder = () =>{\r\n      setColor('#f5f5f5'); // on remet la bordure en gris\r\n    }\r\n    //Grace au Hook useState on modifie la valeur de color avec les f(x)s showBorder et hideBorder en ajoutant les evenements ci-dessous : onMouseLeave et onMouseEnter(voir dans le cahier).\r\n\r\n\r\n    // const goTopokemon = (id:number) => {\r\n    //     history.push(`/pokemons/${id}`);\r\n    // }\r\n    //Permet de nous diriger vers la page pokemon-detail.tsx\r\n   //On peut utiliser LInk ou le Hook useHistory pour nous diriger vers d'autres routes\r\n\r\n  return (\r\n    <Link to='/pokemons/+'>\r\n    <div className=\"col s6 m4\"  onMouseEnter={showBorder} onMouseLeave={hideBorder}>\r\n      <div className=\"card horizontal\" style={{borderColor: color }}>\r\n        <div className=\"card-image\"> \r\n          <img src={pokemon.picture} alt={pokemon.name}/>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n\r\n            {/* --formatDate-- */}\r\n            <p><small>{formatDate(pokemon.created)}\r\n            </small></p>\r\n             \r\n            {/* <p><small>{pokemon.created.toString()}</small></p> */}\r\n\r\n            {/* --formatType-- */}\r\n            {pokemon.types.map(type =>(\r\n              <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n            \r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n    </Link>\r\n  );\r\n}\r\n  \r\n\r\n/**\r\n 1. Ce composant(pokemon.card) est chargé d'afficher le pokemon.\r\n\r\n 2.Pour passer une props dans un composant: on le passe en parametre dans la f(x) qui represente notre composant voir la ligne avec la const PokemonCard:\r\n\r\n 3.Du coup la prop qu'on a passé est pokemon mais on ne sait si c'est un string, un nombre ou ... d'où la raison de typer notre prod (Voir le cours de type script sur la création des types)\r\n\r\n 4. On a typé notre f(x) avec le type Props (voir les generics en TypeScript);\r\n*/\r\nexport default PokemonCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}